@using HashiCorpIntegration.Models

@model CredentialInfoViewModel
@{
    ViewData["Title"] = "Credential Information";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="card">
                <div class="card-header bg-info text-white">
                    <h4 class="card-title mb-0">
                        <i class="fas fa-id-card"></i> Current Credential Information
                    </h4>
                </div>
                <div class="card-body">
                    @if (Model.Success)
                    {
                        <div class="row mb-3">
                            <div class="col-sm-4 fw-bold">Username:</div>
                            <div class="col-sm-8">
                                <span class="badge bg-primary fs-6">@Model.Username</span>
                            </div>
                        </div>

                        @if (!Model.IsStatic)
                        {
                            <div class="row mb-3">
                                <div class="col-sm-4 fw-bold">Lease ID:</div>
                                <div class="col-sm-8">
                                    <code class="text-info">@Model.LeaseId</code>
                                </div>
                            </div>
                        }

                        <div class="row mb-3">
                            <div class="col-sm-4 fw-bold">Credential Type:</div>
                            <div class="col-sm-8">
                                <span class="badge @(Model.IsStatic ? "bg-info" : "bg-primary")">
                                    @(Model.IsStatic ? "Static" : "Dynamic")
                                </span>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-sm-4 fw-bold">Generated by Vault:</div>
                            <div class="col-sm-8">
                                @if (Model.IsVaultGenerated)
                                {
                                    <span class="badge bg-success">
                                        <i class="fas fa-check"></i> Yes
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-warning">
                                        <i class="fas fa-times"></i> No
                                    </span>
                                }
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-sm-4 fw-bold">Retrieved At:</div>
                            <div class="col-sm-8">@Model.RetrievedAt.ToString("yyyy-MM-dd HH:mm:ss")</div>
                        </div>

                        @if (Model.IsStatic)
                        {
                            <div class="row mb-3">
                                <div class="col-sm-4 fw-bold">Last Rotated:</div>
                                <div class="col-sm-8">@Model.LastRotated.ToString("yyyy-MM-dd HH:mm:ss")</div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-sm-4 fw-bold">Next Rotation:</div>
                                <div class="col-sm-8">@Model.NextRotation.ToString("yyyy-MM-dd HH:mm:ss")</div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-sm-4 fw-bold">Rotation Period:</div>
                                <div class="col-sm-8">@($"{Model.RotationPeriod.TotalHours:F0} hours")</div>
                            </div>
                        }
                        else
                        {
                            <div class="row mb-3">
                                <div class="col-sm-4 fw-bold">Expires At:</div>
                                <div class="col-sm-8">
                                    @Model.ExpiresAt.ToString("yyyy-MM-dd HH:mm:ss")
                                    @if (Model.TimeRemaining > TimeSpan.Zero)
                                    {
                                        <small class="text-success ms-2">
                                            (in @($"{Model.TimeRemaining.Hours}h {Model.TimeRemaining.Minutes}m"))
                                        </small>
                                    }
                                    else
                                    {
                                        <small class="text-danger ms-2">(EXPIRED)</small>
                                    }
                                </div>
                            </div>
                        }

                        @if (Model.IsStatic)
                        {
                            <div class="row mb-3">
                                <div class="col-sm-4 fw-bold">Status:</div>
                                <div class="col-sm-8">
                                    <span class="badge bg-success">ACTIVE</span>
                                </div>
                            </div>

                            <div class="alert alert-info">
                                <i class="fas fa-info-circle"></i>
                                <strong>Static Credential:</strong>
                                This credential rotates automatically based on the configured schedule.
                            </div>
                        }
                        else
                        {
                            <div class="row mb-3">
                                <div class="col-sm-4 fw-bold">Status:</div>
                                <div class="col-sm-8">
                                    @if (Model.TimeRemaining > TimeSpan.Zero)
                                    {
                                        <span class="badge bg-success">ACTIVE</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">EXPIRED</span>
                                    }
                                </div>
                            </div>

                            @if (Model.TimeRemaining > TimeSpan.Zero)
                            {
                                <div class="alert alert-info">
                                    <i class="fas fa-clock"></i>
                                    <strong>Time Remaining:</strong>
                                    @($"{Model.TimeRemaining.Hours}h {Model.TimeRemaining.Minutes}m {Model.TimeRemaining.Seconds}s")
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-danger">
                                    <i class="fas fa-exclamation-triangle"></i>
                                    <strong>This credential has expired!</strong>
                                    You may need to obtain new credentials.
                                </div>
                            }
                        }
                    }
                    else
                    {
                        <div class="alert alert-danger">
                            <i class="fas fa-exclamation-circle"></i>
                            <strong>Error:</strong> @Model.Error
                        </div>
                    }
                </div>
                <div class="card-footer text-center">
                    <a href="@Url.Action("Index")" class="btn btn-primary">
                        <i class="fas fa-arrow-left"></i> Back to Dashboard
                    </a>
                    <a href="@Url.Action("TestQuery")" class="btn btn-success ms-2">
                        <i class="fas fa-play"></i> Test Database Connection
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">