@using HashiCorpIntegration.src.Models
@model KvTestViewModel
@{
    ViewData["Title"] = "KV Secret Test";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="card">
                <div class="card-header bg-success text-white">
                    <h4 class="card-title mb-0">
                        <i class="fas fa-play"></i> KV Secret Retrieval Test
                    </h4>
                </div>
                <div class="card-body">
                    @if (Model.Success)
                    {
                        <div class="alert alert-success">
                            <i class="fas fa-check-circle"></i>
                            <strong>Test Successful!</strong>
                            Secret retrieved successfully from Vault.
                        </div>

                        <div class="row mb-3">
                            <div class="col-sm-3 fw-bold">Test Path:</div>
                            <div class="col-sm-9">
                                <code class="text-primary">@Model.TestPath</code>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-sm-3 fw-bold">Test Key:</div>
                            <div class="col-sm-9">
                                <code class="text-info">@Model.TestKey</code>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-sm-3 fw-bold">Retrieved Value:</div>
                            <div class="col-sm-9">
                                <div class="input-group">
                                    <input type="password" class="form-control" id="retrievedValue"
                                           value="@Model.RetrievedValue" readonly>
                                    <button class="btn btn-outline-secondary" type="button"
                                            onclick="togglePassword('retrievedValue', this)"
                                            title="Show/Hide Value">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </div>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-sm-3 fw-bold">Response Time:</div>
                            <div class="col-sm-9">
                                <span class="badge bg-info">@($"{Model.ResponseTime.TotalMilliseconds:F2} ms")</span>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-sm-3 fw-bold">Test Executed At:</div>
                            <div class="col-sm-9">@Model.TestExecutedAt.ToString("yyyy-MM-dd HH:mm:ss")</div>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-danger">
                            <i class="fas fa-times-circle"></i>
                            <strong>Test Failed!</strong>
                            Unable to retrieve secret from Vault.
                        </div>

                        <div class="row mb-3">
                            <div class="col-sm-3 fw-bold">Test Path:</div>
                            <div class="col-sm-9">
                                <code class="text-primary">@Model.TestPath</code>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-sm-3 fw-bold">Test Key:</div>
                            <div class="col-sm-9">
                                <code class="text-info">@Model.TestKey</code>
                            </div>
                        </div>

                        @if (!string.IsNullOrEmpty(Model.Error))
                        {
                            <div class="row mb-3">
                                <div class="col-sm-3 fw-bold">Error:</div>
                                <div class="col-sm-9">
                                    <div class="alert alert-warning">
                                        @Model.Error
                                    </div>
                                </div>
                            </div>
                        }

                        <div class="row mb-3">
                            <div class="col-sm-3 fw-bold">Response Time:</div>
                            <div class="col-sm-9">
                                <span class="badge bg-secondary">@($"{Model.ResponseTime.TotalMilliseconds:F2} ms")</span>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-sm-3 fw-bold">Test Executed At:</div>
                            <div class="col-sm-9">@Model.TestExecutedAt.ToString("yyyy-MM-dd HH:mm:ss")</div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function togglePassword(inputId, btn) {
        const input = document.getElementById(inputId);
        if (input.type === "password") {
            input.type = "text";
            btn.innerHTML = '<i class="fas fa-eye-slash"></i>';
        } else {
            input.type = "password";
            btn.innerHTML = '<i class="fas fa-eye"></i>';
        }
    }
</script>

<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
